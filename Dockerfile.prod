#################################
# BUILDER IMAGE
#################################
FROM python:3.9.16-alpine

# install poetry
RUN pip install "poetry==1.4.2"

# set work directory
WORKDIR /usr/src/app

COPY /poetry.toml .
COPY /pyproject.toml .
COPY /README.md .

# install dependencies
RUN poetry install --no-cache --no-interaction --no-ansi --without dev
RUN poetry export -f requirements.txt >> requirements.txt


#################################
# PRODUCTION IMAGE
#################################
FROM python:3.9.16-alpine

# install psycopg2 dependencies
RUN apk update && apk add postgresql-dev gcc python3-dev musl-dev libpq

ENV PYTHONDONTWRITEBYTECODE 1 \
    PYTHONUNBUFFERED 1 \
    PIP_NO_CACHE_DIR=off

# create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/web

# create directory for the app user
RUN mkdir -p $HOME
RUN mkdir -p $APP_HOME
RUN mkdir -p $APP_HOME/static

# set work directory
WORKDIR $APP_HOME

COPY --from=builder-base $APP_HOME/requirements.txt $APP_HOME/requirements.txt

# create the app user
RUN addgroup -S app && adduser -S app -G app

RUN pip install --no-cache-dir -r $APP_HOME/requirements.txt

COPY /cookiesite $APP_HOME/cookiesite
COPY /blog $APP_HOME/blog
COPY /manage.py .

# copy entrypoint.prod.sh
COPY /entrypoint.prod.sh .
RUN sed -i 's/\r$//g'  $APP_HOME/entrypoint.prod.sh
RUN chmod +x  $APP_HOME/entrypoint.prod.sh

COPY /worker-entrypoint.sh .
RUN sed -i 's/\r$//g' $APP_HOME/worker-entrypoint.sh
RUN chmod +x $APP_HOME/worker-entrypoint.sh

COPY /beat-entrypoint.sh .
RUN sed -i 's/\r$//g' $APP_HOME/beat-entrypoint.sh
RUN chmod +x $APP_HOME/beat-entrypoint.sh

# chown all the files to the app user
RUN chown -R app:app $APP_HOME

# change to the app user
USER app
