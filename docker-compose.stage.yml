version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.prod
    image: 284110347794.dkr.ecr.eu-west-1.amazonaws.com/django-ec2:web
    command: poetry run gunicorn cookiesite.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/home/app/web/static
    expose:
      - 8000
    env_file:
      - ./.env.stage
  nginx-proxy:
    container_name: nginx-proxy
    build: nginx
    image: 284110347794.dkr.ecr.eu-west-1.amazonaws.com/django-ec2:nginx-proxy
    restart: always
    ports:
      - 443:443
      - 80:80
    volumes:
      - static_volume:/home/app/web/static
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - web
  nginx-proxy-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    env_file:
      - ./.env.stage.proxy-companion
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - acme:/etc/acme.sh
    depends_on:
      - nginx-proxy
  celery-worker:
    restart: unless-stopped
    build: .
    entrypoint: /usr/src/app/worker-entrypoint.sh
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.stage
    depends_on:
        - web
        - redis
  celery-beat:
    restart: unless-stopped
    build: .
    entrypoint: /usr/src/app/beat-entrypoint.sh
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.stage
    depends_on:
        - web
        - redis
        - celery-worker
  redis:
    restart: unless-stopped
    image: redis:7.0.5-alpine
    expose:
      - 6379

volumes:
  static_volume:
  certs:
  html:
  vhost:
  acme:
