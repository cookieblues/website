name: Build, Push, and Deploy Image

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, reopened, synchronize, ready_for_review]

jobs:
  build-push-image:
    name: Build and push image
    # if: ${{ !github.event.pull_request }}
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-duration-seconds: 1200
      - name: Checkout branch
        uses: actions/checkout@v3
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
      - name: Create env file
        run: |
          echo "${{ secrets.ENV_STAGE }}" > .env.stage
          echo "${{ secrets.ENV_STAGE_PROXY_COMPANION }}" > .env.stage.proxy-companion
      - name: Build image
        run: |
          docker-compose -f docker-compose.stage.yml build --no-cache
      - name: Push Docker image
        run: |
          docker-compose -f docker-compose.stage.yml push
      - name: Clean up SSH keys
        run: rm -rf ~/.ssh
  copy-deploy-image:
    name: Copy and deploy image
    needs: build-push-image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v3
      - name: Create env file
        run: |
          echo "${{ secrets.ENV_STAGE }}" > .env.stage
          echo "${{ secrets.ENV_STAGE_PROXY_COMPANION }}" > .env.stage.proxy-companion
      - name: Install SSH keys
        # check this thread to understand why its needed:
        # https://stackoverflow.com/a/70447517
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_SSH_HOST }} > ~/.ssh/known_hosts
          echo "ServerAliveInterval 1800" >> ~/.ssh/config 
      - name: Remove existing code
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_SSH_USER }}@${{ secrets.EC2_SSH_HOST }} 'rm -rf /home/ubuntu/cookieblues-website-stage/*'
      - name: Copy new code
        run: |
          scp -i ~/.ssh/id_rsa -r $(pwd)/{cookiesite,blog,nginx,.env.stage,.env.stage.proxy-companion,docker-compose.stage.yml,Dockerfile.prod,entrypoint.prod.sh,beat-entrypoint.sh,worker-entrypoint.sh,manage.py,poetry.toml,pyproject.toml,README.md,supervisord.conf} ${{ secrets.EC2_SSH_USER }}@${{ secrets.EC2_SSH_HOST }}:/home/ubuntu/cookieblues-website-stage
      - name: Deploy new image
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_SSH_USER }}@${{ secrets.EC2_SSH_HOST }} 'bash ~/deploy.sh'
      - name: Clean up SSH keys
        run: rm -rf ~/.ssh
